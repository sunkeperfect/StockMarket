<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
           http://www.springframework.org/schema/context   
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
            	http://www.springframework.org/schema/aop 
 		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
 		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
 		http://www.springframework.org/schema/tx 
 		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	<!-- 如果有多个 DispatcherServlet 请把关于数据库和server部分的bean在web.xml中使用spring 的 listener加载 -->
	<!-- 自动扫描controller bean，把作了注解的类转换为bean -->
	<context:component-scan base-package="com.stockmarket.controller,com.stockmarket.dao,com.stockmarket.dao.impl,com.stockmarket.service" />
	<context:annotation-config />
	<mvc:default-servlet-handler />
	<mvc:annotation-driven />
<!-- <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
          destroy-method="destroy">
        <property name="dataSource" ref="mipDataSource"/>
        <property name="packagesToScan">
            <list>
                <value>com.vip.mobile.moc.dao.entity</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
                <prop key="hibernate.query.substitutions">true 'Y', false 'N'</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
                Hibernate Search index directory
                <prop key="hibernate.search.default.indexBase">${app.search.index.basedir}</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="javax.persistence.validation.mode">none</prop>
            </props>
            Turn batching off for better error messages under PostgreSQL
            hibernate.jdbc.batch_size=0
        </property>
    </bean>
<bean id="mipDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/stock?useUnicode=true&amp;characterEncoding=UTF8" />
		<property name="username" value="sunke"/>
		<property name="password" value="123456"/>
		<property name="initialSize" value="10"/>
		<property name="maxActive" value="10"/>
		<property name="maxIdle" value="10"/>
		<property name="minIdle" value="3"/>

		mysql connection timeout
		<property name="validationQuery" value="select 1" />
		<property name="testOnBorrow" value="true"/>
	</bean> -->

	<!-- 事务 -->
	<!-- <bean id="transactionManager" -->
	<!-- class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> -->
	<!-- <property name="dataSource" ref="dataSource" /> -->
	<!-- </bean> -->
	<!-- 数据源 -->
	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" -->
	<!-- destroy-method="close"> -->
	<!-- <property name="driverClassName" value="com.mysql.jdbc.Driver" /> -->
	<!-- <property name="url" -->
	<!-- value="jdbc:mysql://findyou02.mysql.rds.aliyuncs.com:3306/findyou" 
		/> -->
	<!-- <property name="username" value="fy_developer" /> -->
	<!-- <property name="password" value="123qweASD" /> -->
	<!-- </bean> -->
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/plain;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
		
	</bean>
	<!-- 对模型视图名称的解析，在请求时模型视图名称添加前后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/WEB-INF/view/" p:suffix=".jsp">
	</bean>

	<!-- 自定义exception处理 -->
</beans>  